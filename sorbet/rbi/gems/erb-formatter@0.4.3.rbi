# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `erb-formatter` gem.
# Please instead update this file by running `bin/tapioca gem erb-formatter`.

# source://erb-formatter//lib/erb/formatter/version.rb#5
class ERB::Formatter
  # @return [Formatter] a new instance of Formatter
  #
  # source://erb-formatter//lib/erb/formatter.rb#77
  def initialize(source, line_width: T.unsafe(nil), filename: T.unsafe(nil), debug: T.unsafe(nil)); end

  # Returns the value of attribute erb_tags.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def erb_tags; end

  # Sets the attribute erb_tags
  #
  # @param value the value to set the attribute erb_tags to.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def erb_tags=(_arg0); end

  # Returns the value of attribute erb_tags_regexp.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def erb_tags_regexp; end

  # Sets the attribute erb_tags_regexp
  #
  # @param value the value to set the attribute erb_tags_regexp to.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def erb_tags_regexp=(_arg0); end

  # source://erb-formatter//lib/erb/formatter.rb#294
  def format; end

  # source://erb-formatter//lib/erb/formatter.rb#119
  def format_attributes(tag_name, attrs, tag_closing); end

  # source://erb-formatter//lib/erb/formatter.rb#243
  def format_erb_tags(string); end

  # source://erb-formatter//lib/erb/formatter.rb#220
  def format_ruby(code, autoclose: T.unsafe(nil)); end

  # source://erb-formatter//lib/erb/formatter.rb#184
  def format_text(text); end

  # Returns the value of attribute html.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def html; end

  # Sets the attribute html
  #
  # @param value the value to set the attribute html to.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def html=(_arg0); end

  # source://erb-formatter//lib/erb/formatter.rb#178
  def indented(string, strip: T.unsafe(nil)); end

  # Returns the value of attribute line_width.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def line_width; end

  # Sets the attribute line_width
  #
  # @param value the value to set the attribute line_width to.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def line_width=(_arg0); end

  # Returns the value of attribute pre_placeholders.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def pre_placeholders; end

  # Sets the attribute pre_placeholders
  #
  # @param value the value to set the attribute pre_placeholders to.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def pre_placeholders=(_arg0); end

  # Returns the value of attribute pre_placeholders_regexp.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def pre_placeholders_regexp; end

  # Sets the attribute pre_placeholders_regexp
  #
  # @param value the value to set the attribute pre_placeholders_regexp to.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def pre_placeholders_regexp=(_arg0); end

  # Returns the value of attribute pre_pos.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def pre_pos; end

  # Sets the attribute pre_pos
  #
  # @param value the value to set the attribute pre_pos to.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def pre_pos=(_arg0); end

  # source://erb-formatter//lib/erb/formatter.rb#163
  def raise(message); end

  # source://erb-formatter//lib/erb/formatter.rb#106
  def remove_front_matter(source); end

  # Returns the value of attribute source.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def source; end

  # Sets the attribute source
  #
  # @param value the value to set the attribute source to.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def source=(_arg0); end

  # Returns the value of attribute tag_stack.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def tag_stack; end

  # Sets the attribute tag_stack
  #
  # @param value the value to set the attribute tag_stack to.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def tag_stack=(_arg0); end

  # source://erb-formatter//lib/erb/formatter.rb#154
  def tag_stack_pop(tag_name, code); end

  # source://erb-formatter//lib/erb/formatter.rb#149
  def tag_stack_push(tag_name, code); end

  # Returns the value of attribute tags_regexp.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def tags_regexp; end

  # Sets the attribute tags_regexp
  #
  # @param value the value to set the attribute tags_regexp to.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def tags_regexp=(_arg0); end

  # Returns the value of attribute html.
  #
  # source://erb-formatter//lib/erb/formatter.rb#113
  def to_s; end

  class << self
    # source://erb-formatter//lib/erb/formatter.rb#73
    def format(source, filename: T.unsafe(nil)); end
  end
end

# source://erb-formatter//lib/erb/formatter.rb#36
ERB::Formatter::ATTR = T.let(T.unsafe(nil), Regexp)

# https://stackoverflow.com/a/317081
#
# source://erb-formatter//lib/erb/formatter.rb#29
ERB::Formatter::ATTR_NAME = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#34
ERB::Formatter::BAD_ATTR = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#33
ERB::Formatter::DOUBLE_QUOTE_ATTR = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#66
module ERB::Formatter::DebugShovel
  # source://erb-formatter//lib/erb/formatter.rb#67
  def <<(string); end
end

# source://erb-formatter//lib/erb/formatter.rb#40
ERB::Formatter::ERB_PLACEHOLDER = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#39
ERB::Formatter::ERB_TAG = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#26
class ERB::Formatter::Error < ::StandardError; end

# source://erb-formatter//lib/erb/formatter.rb#44
ERB::Formatter::HTML_ATTR = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#46
ERB::Formatter::HTML_TAG_CLOSE = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#45
ERB::Formatter::HTML_TAG_OPEN = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter/ignore_list.rb#1
class ERB::Formatter::IgnoreList
  # @return [IgnoreList] a new instance of IgnoreList
  #
  # source://erb-formatter//lib/erb/formatter/ignore_list.rb#2
  def initialize(contents: T.unsafe(nil), base_dir: T.unsafe(nil)); end

  # @return [Boolean]
  #
  # source://erb-formatter//lib/erb/formatter/ignore_list.rb#8
  def should_ignore_file?(path); end
end

# source://erb-formatter//lib/erb/formatter.rb#37
ERB::Formatter::MULTILINE_ATTR_NAMES = T.let(T.unsafe(nil), Array)

# source://erb-formatter//lib/erb/formatter.rb#35
ERB::Formatter::QUOTED_ATTR = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#57
ERB::Formatter::RUBOCOP_STDIN_MARKER = T.let(T.unsafe(nil), String)

# source://erb-formatter//lib/erb/formatter.rb#54
ERB::Formatter::RUBY_CLOSE_BLOCK = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#50
ERB::Formatter::RUBY_OPEN_BLOCK = T.let(T.unsafe(nil), Proc)

# source://erb-formatter//lib/erb/formatter.rb#55
ERB::Formatter::RUBY_REOPEN_BLOCK = T.let(T.unsafe(nil), Regexp)

# Override the max line length to account from already indented ERB
#
# source://erb-formatter//lib/erb/formatter.rb#60
module ERB::Formatter::RubocopForcedMaxLineLength
  # source://erb-formatter//lib/erb/formatter.rb#61
  def max; end
end

# source://erb-formatter//lib/erb/formatter.rb#48
ERB::Formatter::SELF_CLOSING_TAG = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#32
ERB::Formatter::SINGLE_QUOTE_ATTR = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#14
module ERB::Formatter::SyntaxTreeCommandPatch
  # source://erb-formatter//lib/erb/formatter.rb#15
  def format(q); end
end

# source://erb-formatter//lib/erb/formatter.rb#42
ERB::Formatter::TAG_NAME = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#43
ERB::Formatter::TAG_NAME_ONLY = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#31
ERB::Formatter::UNQUOTED_ATTR = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter.rb#30
ERB::Formatter::UNQUOTED_VALUE = T.let(T.unsafe(nil), Regexp)

# source://erb-formatter//lib/erb/formatter/version.rb#6
ERB::Formatter::VERSION = T.let(T.unsafe(nil), String)
